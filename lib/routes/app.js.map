{"version":3,"sources":["../../src/routes/app.js"],"names":["require","config","router","Router","octokit","controller","Slack","slack","setWebhook","process","env","SLACK_WEBHOOK_URL","reminderMessage","module","exports","post","req","res","next","forkee","body","owner","login","forkedRepo","repository","name","gitHubAuthentication","commitReminder","activity","listRepoEvents","repo","then","data","commits","filter","e","payload","length","hasCommitted","storage","users","find","gitHubName","error","message","id","webhook","err","response","setTimeout","authenticate","type","key","GITHUB_CLIENT_ID","secret","GITHUB_CLIENT_SECRET"],"mappings":";;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAAC,SAAD,CAAP,CAAmBG,MAAnB,EAAf;;AACA,IAAMC,OAAO,GAAGJ,OAAO,CAAC,eAAD,CAAP,EAAhB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,+BAAD,CAA1B;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMO,KAAK,GAAG,IAAID,KAAJ,EAAd;AACAC,KAAK,CAACC,UAAN,CAAiBC,OAAO,CAACC,GAAR,CAAYC,iBAA7B;;AAEA,IAAMC,eAAe,GAAGZ,OAAO,CAAC,6BAAD,CAA/B;;AAEAa,MAAM,CAACC,OAAP,GAAiBZ,MAAM,CAACa,IAAP,CAAY,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,iBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,MAD0B,GACjBH,GAAG,CAACI,IAAJ,CAASD,MAAT,CAAgBE,KAAhB,CAAsBC,KADL;AAE1BC,YAAAA,UAF0B,GAEbP,GAAG,CAACI,IAAJ,CAASI,UAAT,CAAoBC,IAFP;AAAA;AAAA,mBAI1BC,oBAAoB,EAJM;;AAAA;AAAA;AAAA,mBAK1BC,cAAc,CAACR,MAAD,EAASI,UAAT,CAAd,EAL0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,IAAjB;;AAQA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACR,MAAD,EAASI,UAAT;AAAA,SAAwB,YAAM;AACnDnB,IAAAA,OAAO,CAACwB,QAAR,CACGC,cADH,CACkB;AACdR,MAAAA,KAAK,EAAEF,MADO;AAEdW,MAAAA,IAAI,EAAEP;AAFQ,KADlB,EAKGQ,IALH,CAKQ,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAClB,UAAMC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAY,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,OAAF,CAAUH,OAAV,CAAkBI,MAAlB,GAA2B,CAA/B;AAAA,OAAb,CAAhB;AACA,UAAMC,YAAY,GAAGL,OAAO,CAACI,MAAR,GAAiB,CAAtC;;AAEA,UAAG,CAACC,YAAJ,EAAkB;AAChBjC,QAAAA,UAAU,CAACkC,OAAX,CAAmBC,KAAnB,CAAyBC,IAAzB,CACE;AAAEC,UAAAA,UAAU,EAAEvB;AAAd,SADF,EAEE,UAACwB,KAAD,EAAQH,KAAR,EAAkB;AAChB,cAAMI,OAAO,GAAGhC,eAAe,CAAC4B,KAAK,CAAC,CAAD,CAAL,CAASK,EAAV,EAActB,UAAd,CAA/B;AACAhB,UAAAA,KAAK,CAACuC,OAAN,CAAcF,OAAd,EAAuB,UAACG,GAAD,EAAMC,QAAN,EAAmB,CAAE,CAA5C;AACD,SALH;AAOAC,QAAAA,UAAU,CAACtB,cAAc,CAACR,MAAD,EAASI,UAAT,CAAf,EAAqC,MAArC,CAAV;AAED,OAVD,MAUO;AACL;AACD;AACF,KAtBH;AAuBD,GAxBsB;AAAA,CAAvB;;AA0BA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCtB,EAAAA,OAAO,CAAC8C,YAAR,CAAqB;AACnBC,IAAAA,IAAI,EAAE,OADa;AAEnBC,IAAAA,GAAG,EAAE3C,OAAO,CAACC,GAAR,CAAY2C,gBAFE;AAGnBC,IAAAA,MAAM,EAAE7C,OAAO,CAACC,GAAR,CAAY6C;AAHD,GAArB;AAKD,CAND","sourcesContent":["require('dotenv').config();\nconst router = require('express').Router();\nconst octokit = require('@octokit/rest')();\nconst controller = require('../controller/spawnController');\nconst Slack = require('slack-node');\nconst slack = new Slack();\nslack.setWebhook(process.env.SLACK_WEBHOOK_URL);\n\nconst reminderMessage = require('../fixtures/reminderMessage');\n\nmodule.exports = router.post('/', async(req, res, next) => {\n  const forkee = req.body.forkee.owner.login;\n  const forkedRepo = req.body.repository.name;\n\n  await gitHubAuthentication();\n  await commitReminder(forkee, forkedRepo)();\n});\n\nconst commitReminder = (forkee, forkedRepo) => () => {\n  octokit.activity\n    .listRepoEvents({\n      owner: forkee,\n      repo: forkedRepo\n    })\n    .then(({ data }) => {\n      const commits = data.filter(e => e.payload.commits.length > 0);\n      const hasCommitted = commits.length > 0;\n\n      if(!hasCommitted) {\n        controller.storage.users.find(\n          { gitHubName: forkee },\n          (error, users) => {\n            const message = reminderMessage(users[0].id, forkedRepo);\n            slack.webhook(message, (err, response) => {});\n          }\n        );\n        setTimeout(commitReminder(forkee, forkedRepo), 900000);\n\n      } else {\n        return;\n      }\n    });\n};\n\nconst gitHubAuthentication = () => {\n  octokit.authenticate({\n    type: 'oauth',\n    key: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET\n  });\n};\n"],"file":"app.js"}